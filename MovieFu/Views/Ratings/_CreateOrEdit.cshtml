@model MovieFu.Models.Rating

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.UserName)
</div>
<div class="editor-field">
    @Model.UserName
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Comments)
</div>
<div class="editor-field">
    @Html.TextAreaFor(model => model.Comments, 6, 80, null)
    @Html.ValidationMessageFor(model => model.Comments)
</div>
<br />

@Html.HiddenFor(model => model.Stars)
<div id="star-rating" class="rateit"></div>
@Html.ValidationMessageFor(model => model.Stars)



<div class="editor-label">
    Movie
</div>

<div class="editor-field">
    @Html.DropDownListFor(model => model.MovieID, ((IEnumerable<MovieFu.Models.Movie>)ViewBag.PossibleMovies).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Title), 
        Value = option.MovieID.ToString(),
        Selected = (Model != null) && (option.MovieID == Model.MovieID)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.MovieID)
</div>

<script src="../../Scripts/jquery-1.6.4.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.rateit.js" type="text/javascript"></script>    

                                                                             
<script type="text/javascript">
    $(function () {
        // handles failed validation and loads the value from the hidden input with model value
        $("#star-rating").rateit('value', $("#Stars").val());

        // used to update/reset the hidden input
        $("#star-rating").bind('rated', function (event, value) {$('#Stars').val(value); } );
        $("#star-rating").bind('reset', function () { $('#Stars').val(''); });
    });
</script>